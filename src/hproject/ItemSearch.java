/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hproject;
import hproject.mySQLQueries;
import hproject.DBConnection;
import java.sql.*;
import java.sql.Connection;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.JOptionPane;
/**
 *
 * @author GuHeHe
 */
public class ItemSearch extends javax.swing.JDialog {

    mySQLQueries msql = new mySQLQueries();
    DefaultTableModel dtm = new DefaultTableModel();
    Statement ste = null ;
    Connection con = null;
    /**
     * Creates new form ItemSearch
     */
    public ItemSearch(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        try
        {
            con = DBConnection.GetMySQLConnection();
        }
        catch(ClassNotFoundException cnfe)
        {
            System.out.println(cnfe);
        }
        catch(SQLException sqle)
        {
            System.out.println(sqle);
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
        createtable();
        fillBrandType();
        fillItem("select * from itemdetail");
        cbobrandname.setVisible(false);
        cbotypename.setVisible(false);
        getRootPane().setDefaultButton(btnsearch);
    }

    public void createtable()
    {
        dtm.addColumn("Item ID");
        dtm.addColumn("Item Name | Brand | Tye");
        dtm.addColumn("Price");
        dtm.addColumn("Quantity");
        dtm.addColumn("Remark");
        tblitem.setModel(dtm);
        setColumnWidth(0,30);
        setColumnWidth(1,260);
        setColumnWidth(2,20);
        setColumnWidth(3,10);
        setColumnWidth(4,50);
    }
    public void setColumnWidth(int index , int width)
    {
        DefaultTableColumnModel tcm = (DefaultTableColumnModel)tblitem.getColumnModel();
        TableColumn tc = tcm.getColumn(index);
        tc.setPreferredWidth(width);
    }
    
    public void fillItem(String sql)
    {
        String strdataitem[]= new String[5];
        try
        {
            Statement ste = con.createStatement();
            while(dtm.getRowCount()>0)
               dtm.removeRow(0);
            ResultSet rs = ste.executeQuery(sql);
            while(rs.next())
            {
                strdataitem[0]=rs.getString(1);//itemid
              //  strquery=msql.getMerchandise(rs.getString(2));//merid
                strdataitem[1]=rs.getString(2);//itemname
            //    System.out.println(rs.getString(3));
                strdataitem[1]+="|"+msql.getBrandName(rs.getString(3));//brandname
                strdataitem[1]+="|"+msql.getTypeName(rs.getString(4));//typename
                strdataitem[2]=rs.getString(5);//price
                strdataitem[3]=rs.getString(7);//qty
                strdataitem[4]=rs.getString(6);//remark
                dtm.addRow(strdataitem);
            }
            tblitem.setModel(dtm);
        }
        catch(SQLException sqle)
        {
            System.out.println(sqle);
        }
        
    }
    
    public void fillBrandType()
    {
        cbobrandname.addItem("-Selected-");
        String str[]= msql.getNameForChoice("brand");
        for(int i=0 ; i<str.length ; i++)
            cbobrandname.addItem(str[i]);
        cbotypename.addItem("-Selected-");
         String str1[]= msql.getNameForChoice("type");
        for(int j=0 ; j<str1.length ; j++)
            cbotypename.addItem(str1[j]);
    }
    public void getQueryb(String merid)
    {
            while(dtm.getRowCount()>0)
                    dtm.removeRow(0);
            fillItem("Select * from itemdetail where brandid='"+merid+"'");
    }
    public void getQueryt(String merid)
    {
            while(dtm.getRowCount()>0)
                    dtm.removeRow(0);
            fillItem("Select * from itemdetail where typeid='"+merid+"'");
    }
    public void getQueryb(String merid,String tid)
    {
            while(dtm.getRowCount()>0)
                    dtm.removeRow(0);
            fillItem("Select * from itemdetail where brandid='"+merid+"' and typeid='"+tid+"'");
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        rdobrand = new javax.swing.JRadioButton();
        rdotype = new javax.swing.JRadioButton();
        rdoboth = new javax.swing.JRadioButton();
        cbotypename = new javax.swing.JComboBox();
        btnsearch = new javax.swing.JButton();
        btnshowall = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblitem = new javax.swing.JTable();
        cbobrandname = new javax.swing.JComboBox();
        btnprint = new javax.swing.JButton();
        btnclose = new javax.swing.JButton();
        btnitemdetail = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Item Search");
        setLocation(new java.awt.Point(600, 250));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Item Search :"));
        jPanel1.setLayout(null);

        buttonGroup1.add(rdobrand);
        rdobrand.setText("Brand");
        rdobrand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdobrandActionPerformed(evt);
            }
        });
        jPanel1.add(rdobrand);
        rdobrand.setBounds(20, 30, 90, 29);

        buttonGroup1.add(rdotype);
        rdotype.setText("Type");
        rdotype.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdotypeActionPerformed(evt);
            }
        });
        jPanel1.add(rdotype);
        rdotype.setBounds(160, 30, 90, 29);

        buttonGroup1.add(rdoboth);
        rdoboth.setText("Brand & Type");
        rdoboth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdobothActionPerformed(evt);
            }
        });
        jPanel1.add(rdoboth);
        rdoboth.setBounds(280, 30, 170, 29);

        jPanel1.add(cbotypename);
        cbotypename.setBounds(160, 60, 120, 26);

        btnsearch.setMnemonic('s');
        btnsearch.setText("Search");
        btnsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearchActionPerformed(evt);
            }
        });
        jPanel1.add(btnsearch);
        btnsearch.setBounds(300, 60, 80, 29);

        btnshowall.setMnemonic('a');
        btnshowall.setText("ShowAll");
        btnshowall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnshowallActionPerformed(evt);
            }
        });
        jPanel1.add(btnshowall);
        btnshowall.setBounds(410, 60, 90, 29);

        tblitem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Item ID", "Item Name | Brand | Type", "Price", "Quantity", "Remark"
            }
        ));
        jScrollPane1.setViewportView(tblitem);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(10, 100, 610, 160);

        jPanel1.add(cbobrandname);
        cbobrandname.setBounds(20, 60, 110, 26);

        btnprint.setMnemonic('p');
        btnprint.setText("Print");
        btnprint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnprintActionPerformed(evt);
            }
        });
        jPanel1.add(btnprint);
        btnprint.setBounds(240, 300, 180, 29);

        btnclose.setMnemonic('l');
        btnclose.setText("Close");
        btnclose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncloseActionPerformed(evt);
            }
        });
        jPanel1.add(btnclose);
        btnclose.setBounds(440, 300, 180, 29);

        btnitemdetail.setMnemonic('i');
        btnitemdetail.setText("Item Detail");
        btnitemdetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnitemdetailActionPerformed(evt);
            }
        });
        jPanel1.add(btnitemdetail);
        btnitemdetail.setBounds(30, 300, 180, 29);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 672, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rdobrandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdobrandActionPerformed
        // TODO add your handling co

        cbobrandname.setVisible(true);
        cbobrandname.setSelectedIndex(0);
        cbotypename.setVisible(false);
        cbotypename.setSelectedIndex(0);
    }//GEN-LAST:event_rdobrandActionPerformed

    private void rdotypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdotypeActionPerformed
        // TODO add your handling code here:

        cbobrandname.setVisible(false);
        cbobrandname.setSelectedIndex(0);
        cbotypename.setVisible(true);
        cbotypename.setSelectedIndex(0);
    }//GEN-LAST:event_rdotypeActionPerformed

    private void rdobothActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdobothActionPerformed
        // TODO add your handling code here:

        cbobrandname.setVisible(true);
        cbobrandname.setSelectedIndex(0);
        cbotypename.setVisible(true);
        cbotypename.setSelectedIndex(0);
    }//GEN-LAST:event_rdobothActionPerformed

    private void btnsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearchActionPerformed
        // TODO add your handling code here:

        String brandID , typeID ;
        if(rdobrand.isSelected())
        {

            if(cbobrandname.getSelectedIndex()==0)
            {
                JOptionPane.showMessageDialog(this,"Please choose Brand Name");
                cbobrandname.requestFocus();
            }
            else
            {
                brandID = msql.getBrandID(cbobrandname.getSelectedItem().toString());
                getQueryb(brandID);
            }
        }
        else if(rdotype.isSelected())
        {

            if(cbotypename.getSelectedIndex()==0)
            {
                JOptionPane.showMessageDialog(this,"Please choose Type Name");
                cbotypename.requestFocus();
            }
            else
            {
                typeID = msql.getTypeID(cbotypename.getSelectedItem().toString());
                getQueryt(typeID);
            }
        }
        else if (rdoboth.isSelected())
        {

            if(cbobrandname.getSelectedIndex()==0)
            {
                JOptionPane.showMessageDialog(this,"Please choose Brand Name");
                cbobrandname.requestFocus();
            }
            else if(cbotypename.getSelectedIndex()==0)
            {
                JOptionPane.showMessageDialog(this,"Please choose Type Name");
                cbotypename.requestFocus();
            }
            else
            {
                brandID = msql.getBrandID(cbobrandname.getSelectedItem().toString());
                typeID = msql.getTypeID(cbotypename.getSelectedItem().toString());
                getQueryb(brandID,typeID);
            }
        }
    }//GEN-LAST:event_btnsearchActionPerformed

    private void btnshowallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnshowallActionPerformed
        // TODO add your handling code here:

        fillItem("select * from itemdetail");
    }//GEN-LAST:event_btnshowallActionPerformed

    private void btnprintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnprintActionPerformed
        // TODO add your handling code here:
        try{
            tblitem.print();
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_btnprintActionPerformed

    private void btncloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncloseActionPerformed
        // TODO add your handling code here:
        if((JOptionPane.showConfirmDialog(this, "Are you sure you want to exit?","Confirm exiting.",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE))==JOptionPane.YES_OPTION)
        dispose();
    }//GEN-LAST:event_btncloseActionPerformed

    private void btnitemdetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnitemdetailActionPerformed
        // TODO add your handling code here:
        int r = tblitem.getSelectedRow();
        String s[]=new String[1];
        s[0]=tblitem.getValueAt(r, 0).toString();//item id
        ItemDetail.main(s);
    }//GEN-LAST:event_btnitemdetailActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ItemSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ItemSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ItemSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ItemSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ItemSearch dialog = new ItemSearch(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnclose;
    private javax.swing.JButton btnitemdetail;
    private javax.swing.JButton btnprint;
    private javax.swing.JButton btnsearch;
    private javax.swing.JButton btnshowall;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cbobrandname;
    private javax.swing.JComboBox cbotypename;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rdoboth;
    private javax.swing.JRadioButton rdobrand;
    private javax.swing.JRadioButton rdotype;
    private javax.swing.JTable tblitem;
    // End of variables declaration//GEN-END:variables
}
